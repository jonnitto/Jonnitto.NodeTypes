prototype(NT:Image) < prototype(NT:Content) {
	isContentElement = true
	tagName = 'figure'
	property = 'image'
	inlineTag = NT:LinkTagName
	containerFluid = ${q(node).property('alignment') == 'bleed'}

	@context {
		asset = ${q(node).property(this.property)}
		property = ${this.property}
		inlineTag = ${this.inlineTag}
	}

	attributes.class {
		alignment = NT:WrapIfPropertyIsSet {
			property = 'alignment'
			prepend = 'image-'
		}
		isFirstElement = ${isFirstElement ? 'image-first' : false}
		filetype = ${'image-type-' + q(node).property(property).resource.fileextension}
	}

	prototype(NT:Plainimage) {
		bleedWidth = NT:PropertyFromConfigIfNotSet {
			property = 'maximumWidth'
			configuration = 'Image.bleedWidth'
		}
		bleedHeight = ${Configuration.setting('Jonnitto.NodeTypes.Image.bleedHeight')}

		@context {
			maximumWidth = ${containerFluid ? this.bleedWith : this.maximumWidth}
			maximumHeight = ${containerFluid ? this.bleedHeight : this.maximumHeight}
		}
	}
	content = Fusion:Array {
		image = Fusion:Case {
			hasLink {
				condition = ${q(node).property('link')}
				renderer = Fusion:Tag {
					tagName = ${inlineTag}
					attributes = NT:LinkAttributes {
						style =  NT:ImageMaxWidthValue
					}
					content = NT:Plainimage
				}
			}
			hasLightbox {
				condition = ${q(node).property('lightbox')}
				renderer = Fusion:Tag {
					tagName = ${node.context.inBackend ? 'div' : 'a'}
					attributes = NT:LightboxAttributes {
						style =  NT:ImageMaxWidthValue
					}
					content = NT:Plainimage
				}
			}
			hasMaxWidth {
				condition = ${q(node).property('maximumWidth')}
				renderer = Fusion:Tag {
					attributes.style =  NT:ImageMaxWidthValue
					content = NT:Plainimage
				}
			}
			default {
				condition = true
				renderer = NT:Plainimage
			}
		}
		caption = NT:InlineEditableTag {
			@process.wrap = Fusion:Tag {
				tagName = 'figcaption'
				content = ${value}
			}
			property = 'caption'
			@if.render = ${q(node).property('hasCaption') && (q(node).property('caption') || node.context.inBackend) ? true : false}
		}
	}
}
