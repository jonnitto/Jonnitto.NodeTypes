prototype(NT:GetClosestFromArrayProperty) < prototype(Fusion:Case) {
	property = 'property'
	allNodes = ${q(node).add(q(node).parents()).get()}
	array = ${Neos.Array.filter(this.allNodes, 'properties.' + this.property)}

	@ignoreProperties = ${['property','allNodes','array']}

	@context {
		property = ${this.property}
		array = ${this.array}
	}

	returnFirstArrayElement {
		condition = ${Type.isArray(array) && Array.length(array)? true : false}
		renderer = ${q(Array.first(array)).property(property)}
	}

	returnFalse {
		condition = true
		renderer = false
	}
}
