prototype(NT:Image) < prototype(NT:Content) {
	isContentElement = true
	tagName = 'figure'
	property = 'image'
	inlineTag = NT:LinkTagName

	@context.asset = ${q(node).property(this.property)}

	containerFluid = ${q(node).property('alignment') == 'bleed'}

	attributes.class {
		alignment = NT:WrapIfPropertyIsSet {
			property = 'alignment'
			prepend = 'image-'
		}
		isFirstElement = ${isFirstElement ? 'image-first' : false}
	}

	content = TS:Array {
		image = TS:Case {
			hasLink {
				condition = ${q(node).property('link')}
				renderer = TS:Tag {
					tagName = ${inlineTag}
					attributes = NT:LinkAttributes {
						style =  NT:ImageMaxWidthValue
					}
					content = NT:Plainimage
				}
			}
			hasLightbox {
				condition = ${q(node).property('lightbox')}
				renderer = TS:Tag {
					tagName = ${node.context.inBackend ? 'div' : 'a'}
					attributes = NT:LightboxAttributes {
						style =  NT:ImageMaxWidthValue
					}
					content = NT:Plainimage
				}
			}
			hasMaxWidth {
				condition = ${q(node).property('maximumWidth')}
				renderer = TS:Tag {
					attributes.style =  NT:ImageMaxWidthValue
					content = NT:Plainimage
				}
			}
			default {
				condition = true
				renderer = NT:Plainimage
			}
		}
		caption = NT:InlineEditable {
			property = 'caption'
			tagName = 'figcaption'
			@if.render = ${q(node).property('hasCaption') && (q(node).property('caption') || node.context.inBackend) ? true : false}
		}
	}
}
